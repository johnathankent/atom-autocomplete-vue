'.text.html.vue':
  'Vue Template Tag':
    'prefix': 'vtemplate',
    'body': """
    <template${1: lang="pug"}>$0</template>
    """
  'Vue Script Tag':
    'prefix': 'vscript',
    'body': """
    <script>
    \texport default {
    \t\t// name: '',
    \t\t// # Options / Data
    \t\t// data () { return {} },
    \t\t// props: [],
    \t\t// propsData: {},
    \t\t// computed: {},
    \t\t// methods: {},
    \t\t// watch: {},
    \t\t// # Options / DOM
    \t\t// el () {},
    \t\t// template: '',
    \t\t// render () {},
    \t\t// # Options / Lifecycle Hooks
    \t\t// beforeCreate () {},
    \t\t// created () {},
    \t\t// beforeMount () {},
    \t\t// mounted () {},
    \t\t// beforeUpdate () {},
    \t\t// updated () {},
    \t\t// activated () {},
    \t\t// deactivated () {},
    \t\t// beforeDestroy () {},
    \t\t// destroyed () {},
    \t\t// # Options / Assets
    \t\t// directives: {},
    \t\t// filters: {},
    \t\t// components: {},
    \t\t// # Options / Misc
    \t\t// parent: null,
    \t\t// mixins: [],
    \t\t// extends: {},
    \t\t// delimiters: [ '{{', '}}' ],
    \t\t// functional: false
    \t}
    </script>
    """
  'Vue Style Tag':
    'prefix': 'vstyle',
    'body': """
    <style${1: lang="stylus"}${2: scoped}>$0</style>
    """
  'Vue New Component':
    'prefix': 'vall',
    'body': """
    <template${1: lang="pug"}>
    </template>

    <script>
    \texport default {
    \t\t// name: '',
    \t\t// # Options / Data
    \t\t// data () { return {} },
    \t\t// props: [],
    \t\t// propsData: {},
    \t\t// computed: {},
    \t\t// methods: {},
    \t\t// watch: {},
    \t\t// # Options / DOM
    \t\t// el () {},
    \t\t// template: '',
    \t\t// render () {},
    \t\t// # Options / Lifecycle Hooks
    \t\t// beforeCreate () {},
    \t\t// created () {},
    \t\t// beforeMount () {},
    \t\t// mounted () {},
    \t\t// beforeUpdate () {},
    \t\t// updated () {},
    \t\t// activated () {},
    \t\t// deactivated () {},
    \t\t// beforeDestroy () {},
    \t\t// destroyed () {},
    \t\t// # Options / Assets
    \t\t// directives: {},
    \t\t// filters: {},
    \t\t// components: {},
    \t\t// # Options / Misc
    \t\t// parent: null,
    \t\t// mixins: [],
    \t\t// extends: {},
    \t\t// delimiters: [ '{{', '}}' ],
    \t\t// functional: false
    \t}
    </script>

    <style${2: lang="stylus"}${3: scoped}>
    </style>
    """
